[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "pep440"
version_provider = "poetry"
update_changelog_on_bump = true
major_version_zero = true

# Bump configuration
bump_pattern = "^(break|new|fix|refactor|perf)"
bump_map = {
    "break" = "MAJOR",
    "new" = "MINOR",
    "fix" = "PATCH",
    "refactor" = "PATCH",
    "perf" = "PATCH"
}

# Changelog configuration
change_type_order = [
    "BREAKING CHANGE",
    "feat",
    "fix",
    "refactor",
    "perf",
    "docs",
    "style",
    "test",
    "build",
    "ci"
]

[tool.commitizen.customize]
message_template = "{{change_type}}{% if scope %}({{scope}}){% endif %}: {{subject}}{% if body %}\n\n{{body}}{% endif %}{% if footer %}\n\n{{footer}}{% endif %}"
example = "feat(api): add new authentication endpoint\n\nImplement OAuth 2.0 authentication for secure API access.\nThis includes token generation and validation.\n\nCloses #123"

[[tool.commitizen.customize.questions]]
type = "list"
name = "change_type"
message = "Select the type of change you are committing:"
choices = [
    {value = "feat", name = "feat: A new feature"},
    {value = "fix", name = "fix: A bug fix"},
    {value = "docs", name = "docs: Documentation only changes"},
    {value = "style", name = "style: Changes that do not affect the meaning of the code"},
    {value = "refactor", name = "refactor: A code change that neither fixes a bug nor adds a feature"},
    {value = "perf", name = "perf: A code change that improves performance"},
    {value = "test", name = "test: Adding missing tests or correcting existing tests"},
    {value = "build", name = "build: Changes that affect the build system or external dependencies"},
    {value = "ci", name = "ci: Changes to our CI configuration files and scripts"},
    {value = "chore", name = "chore: Other changes that don't modify src or test files"},
    {value = "revert", name = "revert: Reverts a previous commit"}
]

[[tool.commitizen.customize.questions]]
type = "input"
name = "scope"
message = "What is the scope of this change? (e.g., api, auth, config) (optional):"

[[tool.commitizen.customize.questions]]
type = "input"
name = "subject"
message = "Write a short, imperative tense description of the change:"

[[tool.commitizen.customize.questions]]
type = "input"
name = "body"
message = "Provide a longer description of the change (optional):"

[[tool.commitizen.customize.questions]]
type = "input"
name = "footer"
message = "List any breaking changes or issues closed by this change (optional):"
